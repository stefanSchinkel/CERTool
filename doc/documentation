Structure of package:

CERT
|
|
+-- R 							% R functions
|	|-- batchConvert.R 			% wrapper script for data annotation
|	|-- convert.R				% function for annote CERT output w/ fixed coding
|
+-- attic						% the attic for templates, scripts etc
|
+-- converted					% default place to store R/convert.R output
|
+-- doc
|	|-- documentation			% this file
|	|-- CERTspecs.pdf			% PDF describing the CERT/AFECT System
|
+-- functions
|	|-- constructDummy.m		% dummy head and coordinates for plotting
|	|-- constructTemplates.		% read theoretical networks from private/templates
|	|-- duplicateAUs.m 			% clone the AUs recorded once but plotted twice
|	|-- getTask.m 				% extract one task from data
|	|-- getEmotion.m			% extract one emotion from data
|	|-- getAllEmotions.m		% extract ALL emotions from data
|	|-- importCERT.m			% import annoted CERT data ( output of R/convert.R)
|	|-- plotOnFace.m			% plot NW on a face
|
+--	private
|	|-- face.mat
|	|-- face.png 				% image source for dummy head
|	+-- templates				% templates for emotions in ASCII files
|		|-- Anger.txt
|		|-- Distgust.txt
|		|-- Fear.txt
|		|-- Happy.txt
|		|-- Sad.txt
|		|-- Surprise.txt
|	
|-- comm.m 						% Generic wrapper for analysis
|

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%				DESCRIPTION OF DATA STRUCTURE 			%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

CERT SOFTWARE:
% not fully established yet

% Output of R/convert.R
|sub | 21*AU | Task | Trial | TrialReq_n | TrialReq_c |
	where:
		TrialReq_n and TrialReq_c denote what the subject had to do (conditions)
		as an int (*_n) and string (*_c)
		Codes for condition: 
		1 = AN = ANGER,...
		2 = DI = DISGUST,...
		3 = FE = FEAR,...
		4 = HA = HAPPY,...
		5 = NE = NEUTRAL,...
		6 = SA = SAD,...
		7 = SU = SURPRISE,...

% Output of importCERT.m

[data meta] = importCERT(dataFile)
data: 	NxM array	N = number of AUs
					M = sample (continuous,discreet)
meta: 	struct with fields	"task","trial","emotion"
 		each field contains an 1xM array of ints. 


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%				AU LABELS IN CERT and MATLAB			%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%Labels used in plotOnFace:
label = {	'AU2R','AU2L','AU1R','AU1L',...,...
			'AU4R','AU4L','AU5R','AU5L',...,...
			'AU7R','AU7L','AU6R','AU6L',...,...
			'AU9R','AU9L','AU10R','AU10L',...,...
			'AU12R','AU12L','AU14R','AU14L',...,...
			'AU20R','AU20L','AU15R','AU15l'...,...
			'AU17','AU26',...,...
			'AU23','AU24','AU25','AU28',...,...
},...
% CERTLABEL (from R),...
certLabel = {   'A1',   'A2',...   	#############################
				'A4',   'A5',...	# THOSE AU  HAVE TO 		#
				'A6',   'A7',...	# BE SPLIT IN MATLAB		#
				'A9',...	   		#############################
				'A10R',	'A10L',...
				'A12R', 'A12L',...
				'A14R', 'A14L',...
                'A15',...  			# THIS ONE TOO,...
				'A17',...
				'A20',...    		# THIS ONE TOO,...
				'A23',	'A24',  'A25',  'A26',  'A28' ,...
				 }';

% the same condensed, 
% better for plotting and fiddling
certLabel = {  'A1','A2','A4','A5','A6','A7','A9','A10R','A10L','A12R','A12L','A14R', 'A14L','A15','A17','A20','A23',	'A24',  'A25',  'A26',  'A28' ,}';

To match the number of AUs in CERT and private/face.mat run duplicateAUs.m on the 
data.